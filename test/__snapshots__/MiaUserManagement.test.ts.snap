// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": {
    "MiaStackCognitoAppClientId": {
      "Export": {
        "Name": "MiaStackCognitoAppClient:Id",
      },
      "Value": {
        "Ref": "UserPoolWebClientD5EC4BD0",
      },
    },
    "MiaStackCognitoIdentityPoolId": {
      "Export": {
        "Name": "MiaStack:CognitoIdentityPool:Id",
      },
      "Value": {
        "Ref": "IdentityPoolEC8A1A0D",
      },
    },
    "MiaStackMiaStackCognitoUserPool": {
      "Export": {
        "Name": "MiaStack:MiaStack:CognitoUserPool:Id",
      },
      "Value": {
        "Ref": "MiaStackUserPool24641A2A",
      },
    },
    "MiaStackMyAdminUserGroupCognitoUserGroup": {
      "Export": {
        "Name": "MiaStack:MyAdminUserGroup:CognitoUserGroup:User:Name",
      },
      "Value": "admin",
    },
    "MiaStackMyCustomDomainAuthorizedRedirectUserPoolDomainUrl": {
      "Export": {
        "Name": "MiaStack:MyCustomDomain:AuthorizedRedirectUserPoolDomainUrl",
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
            },
            "/oauth2/idpresponse",
          ],
        ],
      },
    },
    "MiaStackMyCustomDomainCognitoDomainHost": {
      "Export": {
        "Name": "MiaStack:MyCustomDomain:CognitoDomainHost",
      },
      "Value": {
        "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
      },
    },
    "MiaStackMyDefaultUserGroupCognitoUserGroup": {
      "Export": {
        "Name": "MiaStack:MyDefaultUserGroup:CognitoUserGroup:User:Name",
      },
      "Value": "default",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
      "DependsOn": [
        "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "8acca95a9957d02a9f3ec124c9869c5d5b70a7fb3e332120850781ecc9363037.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:AddTagsToResource",
                    "ssm:RemoveTagsFromResource",
                    "ssm:GetParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:eu-west-1:",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/cdk/exports/MiaStack/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExportsReader8B249524": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ReaderProps": {
          "imports": {
            "/cdk/exports/MiaStack/CertificateStackuseast1RefCert5C9FAEC1D9CE664E": "{{resolve:ssm:/cdk/exports/MiaStack/CertificateStackuseast1RefCert5C9FAEC1D9CE664E}}",
            "/cdk/exports/MiaStack/CertificateStackuseast1RefZoneA5DE4B685102DAC0": "{{resolve:ssm:/cdk/exports/MiaStack/CertificateStackuseast1RefZoneA5DE4B685102DAC0}}",
          },
          "prefix": "MiaStack",
          "region": "eu-west-1",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionExportReader",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityPoolAuthenticatedRole42131CF5": {
      "DependsOn": [
        "MiaStackUserPoolPostConfirmationCognito74C1D21B",
        "MiaStackUserPool24641A2A",
        "UserPoolWebClientD5EC4BD0",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityPoolEC8A1A0D",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Authenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "IdentityPoolEC8A1A0D",
                  "Name",
                ],
              },
            ],
          ],
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityPoolDefaultRoleAttachmentD81AFC39": {
      "DependsOn": [
        "MiaStackUserPoolPostConfirmationCognito74C1D21B",
        "MiaStackUserPool24641A2A",
        "UserPoolWebClientD5EC4BD0",
      ],
      "Properties": {
        "IdentityPoolId": {
          "Ref": "IdentityPoolEC8A1A0D",
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "IdentityPoolAuthenticatedRole42131CF5",
              "Arn",
            ],
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "IdentityPoolUnauthenticatedRole68AEFF8B",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "IdentityPoolEC8A1A0D": {
      "DependsOn": [
        "MiaStackUserPoolPostConfirmationCognito74C1D21B",
        "MiaStackUserPool24641A2A",
        "UserPoolWebClientD5EC4BD0",
      ],
      "Properties": {
        "AllowUnauthenticatedIdentities": true,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "UserPoolWebClientD5EC4BD0",
            },
            "ProviderName": {
              "Fn::Join": [
                "",
                [
                  "cognito-idp.eu-west-1.",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "MiaStackUserPool24641A2A",
                  },
                ],
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "IdentityPoolUnauthenticatedRole68AEFF8B": {
      "DependsOn": [
        "MiaStackUserPoolPostConfirmationCognito74C1D21B",
        "MiaStackUserPool24641A2A",
        "UserPoolWebClientD5EC4BD0",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityPoolEC8A1A0D",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Unauthenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "IdentityPoolEC8A1A0D",
                  "Name",
                ],
              },
            ],
          ],
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MiaStackGroupUserMyAdminUserGroup": {
      "Properties": {
        "Description": "MiaStack user group admin",
        "GroupName": "admin",
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "MiaStackGroupUserMyDefaultUserGroup": {
      "Properties": {
        "Description": "MiaStack user group default",
        "GroupName": "default",
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "MiaStackPostConfirmationLambdaInlinePolicy2CE0A817": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminAddUserToGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":cognito-identity:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":identitypool/",
                    {
                      "Ref": "IdentityPoolEC8A1A0D",
                    },
                  ],
                ],
              },
              "Sid": "AllowCognitoGroupAdmin",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MiaStackPostConfirmationLambdaInlinePolicy2CE0A817",
        "Roles": [
          {
            "Ref": "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleFA359935",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MiaStackPostConfirmationLambdaMyPostConfirmationLambda7E976957": {
      "DependsOn": [
        "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleDefaultPolicyD76B2124",
        "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleFA359935",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "136223b085a237d39d93fab44a04ac93174ebdc562086f6d26f6982e8c272bbc.zip",
        },
        "Description": "Cognito post confirmation lambda for MiaStack MyPostConfirmationLambda",
        "Environment": {
          "Variables": {
            "DATA_TABLE_NAME": {
              "Ref": "MiaStackTableC0724FF5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleFA359935",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaLogRetention4C2E30D8": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "MiaStackPostConfirmationLambdaMyPostConfirmationLambda7E976957",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleDefaultPolicyD76B2124": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MiaStackTableC0724FF5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleDefaultPolicyD76B2124",
        "Roles": [
          {
            "Ref": "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleFA359935",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MiaStackPostConfirmationLambdaMyPostConfirmationLambdaServiceRoleFA359935": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "MiaStack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MiaStackTableC0724FF5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "sub",
            "AttributeType": "S",
          },
          {
            "AttributeName": "type",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "sub",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "type",
            "KeyType": "RANGE",
          },
        ],
        "Replicas": [
          {
            "DeletionProtectionEnabled": true,
            "Region": "eu-west-1",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": false,
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::GlobalTable",
      "UpdateReplacePolicy": "Retain",
    },
    "MiaStackUserPool24641A2A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": {
          "PostConfirmation": {
            "Fn::GetAtt": [
              "MiaStackPostConfirmationLambdaMyPostConfirmationLambda7E976957",
              "Arn",
            ],
          },
        },
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 9,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "Schema": [
          {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
          {
            "Mutable": true,
            "Name": "nickname",
            "Required": true,
          },
          {
            "Mutable": true,
            "Name": "picture",
            "Required": true,
          },
          {
            "AttributeDataType": "String",
            "Mutable": false,
            "Name": "id",
            "StringAttributeConstraints": {
              "MaxLength": "32",
              "MinLength": "22",
            },
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolTags": {
          "StackName": "MiaStack",
        },
        "UsernameAttributes": [
          "email",
        ],
        "UsernameConfiguration": {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "MiaStackUserPoolDomainARecordMyCustomDomain54B85FEB": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "MiaStackUserPoolDomainMyCustomDomainCloudFrontDomainNameA51F5719",
              "DomainDescription.CloudFrontDistribution",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Fn::GetAtt": [
            "ExportsReader8B249524",
            "/cdk/exports/MiaStack/CertificateStackuseast1RefZoneA5DE4B685102DAC0",
          ],
        },
        "Name": "auth.h0pe.example.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE": {
      "Properties": {
        "CustomDomainConfig": {
          "CertificateArn": {
            "Fn::GetAtt": [
              "ExportsReader8B249524",
              "/cdk/exports/MiaStack/CertificateStackuseast1RefCert5C9FAEC1D9CE664E",
            ],
          },
        },
        "Domain": "auth.h0pe.example",
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "MiaStackUserPoolDomainMyCustomDomainCloudFrontDomainNameA51F5719": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "MiaStackUserPoolDomainMyCustomDomainCloudFrontDomainNameCustomResourcePolicyBC9D4CD1",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"describeUserPoolDomain","parameters":{"Domain":"",
              {
                "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
              },
              ""}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"describeUserPoolDomain","parameters":{"Domain":"",
              {
                "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "MiaStackUserPoolDomainMyCustomDomainCDCC9BBE",
              },
              ""}}",
            ],
          ],
        },
      },
      "Type": "Custom::UserPoolCloudFrontDomainName",
      "UpdateReplacePolicy": "Delete",
    },
    "MiaStackUserPoolDomainMyCustomDomainCloudFrontDomainNameCustomResourcePolicyBC9D4CD1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolDomain",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MiaStackUserPoolDomainMyCustomDomainCloudFrontDomainNameCustomResourcePolicyBC9D4CD1",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MiaStackUserPoolIdentityProviderApple511861EE": {
      "Properties": {
        "AttributeMapping": {
          "email": "email",
          "nickname": "name",
        },
        "ProviderDetails": {
          "authorize_scopes": "openid profile email",
          "client_id": "my-apple-client-id",
          "key_id": "{{resolve:secretsmanager:arn:secret:test:apple:my:secret:keyId:SecretString:::}}",
          "private_key": "{{resolve:secretsmanager:arn:secret:test:apple:my:secret:privateKey:SecretString:::}}",
          "team_id": "secret-team-id",
        },
        "ProviderName": "SignInWithApple",
        "ProviderType": "SignInWithApple",
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolIdentityProvider",
    },
    "MiaStackUserPoolIdentityProviderGoogle50B1A75F": {
      "Properties": {
        "AttributeMapping": {
          "email": "email",
          "family_name": "family_name",
          "given_name": "given_name",
          "picture": "picture",
        },
        "ProviderDetails": {
          "authorize_scopes": "openid profile email",
          "client_id": "my-google-client-id",
        },
        "ProviderName": "Google",
        "ProviderType": "Google",
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolIdentityProvider",
    },
    "MiaStackUserPoolPostConfirmationCognito74C1D21B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MiaStackPostConfirmationLambdaMyPostConfirmationLambda7E976957",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MiaStackUserPool24641A2A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UserPoolWebClientD5EC4BD0": {
      "DependsOn": [
        "MiaStackUserPoolIdentityProviderApple511861EE",
        "MiaStackUserPoolIdentityProviderGoogle50B1A75F",
      ],
      "Properties": {
        "AccessTokenValidity": 60,
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://callback.google.example",
          "https://callback.apple.example",
        ],
        "GenerateSecret": false,
        "IdTokenValidity": 60,
        "LogoutURLs": [
          "http://logout.google.example",
          "http://logout.apple.example",
        ],
        "SupportedIdentityProviders": [
          "Google",
          "SignInWithApple",
        ],
        "TokenValidityUnits": {
          "AccessToken": "minutes",
          "IdToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "MiaStackUserPool24641A2A",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
